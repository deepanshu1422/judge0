# PostgreSQL Configuration for Judge0 Production
# Optimized for 4-8GB RAM servers

# Connection settings
listen_addresses = '*'
port = 5432
max_connections = 200

# Memory settings (adjust based on your server's RAM)
shared_buffers = 1GB                    # 25% of RAM for 4GB server
effective_cache_size = 3GB              # 75% of RAM for 4GB server
work_mem = 4MB                          # Per connection work memory
maintenance_work_mem = 256MB            # For maintenance operations

# Checkpoint settings
checkpoint_completion_target = 0.9      # Spread checkpoints over time
wal_buffers = 16MB                      # WAL buffer size
checkpoint_timeout = 30min              # Maximum time between checkpoints

# Query optimization
random_page_cost = 1.1                  # For SSD storage
effective_io_concurrency = 200          # For SSD storage
default_statistics_target = 100         # Statistics collection

# Logging
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_min_duration_statement = 1000       # Log slow queries (1 second)

# Autovacuum (important for Judge0's frequent inserts/updates)
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 1min
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.1
autovacuum_analyze_scale_factor = 0.05

# Archive settings (for backup)
archive_mode = on
archive_command = 'test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'

# Performance monitoring
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.track = all
pg_stat_statements.max = 10000

# Security
ssl = off                               # SSL handled by reverse proxy
password_encryption = scram-sha-256

# Other performance settings
wal_level = replica
max_wal_size = 2GB
min_wal_size = 80MB
wal_compression = on
wal_writer_delay = 200ms

# Background writer
bgwriter_delay = 200ms
bgwriter_lru_maxpages = 100
bgwriter_lru_multiplier = 2.0

# Parallel queries (for larger servers)
max_worker_processes = 8
max_parallel_workers_per_gather = 2
max_parallel_workers = 8
max_parallel_maintenance_workers = 2 